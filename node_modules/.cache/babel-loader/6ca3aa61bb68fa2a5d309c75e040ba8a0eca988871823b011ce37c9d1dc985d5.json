{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(url, {\n          signal\n        });\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n_s(useFetch, \"Fc++DvcSUDM3/vBA98cprlVWLM0=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","loading","setLoading","error","setError","controller","AbortController","signal","fetchData","response","fetch","ok","Error","statusText","jsonData","json","message","abort"],"sources":["C:/Users/binbin/Documents/GitHub/Recipe-Finder-App/recipe-finder/src/hooks/useFetch.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Loading from \"../components/Loading\";\r\nimport ErrorPage from \"../components/ErrorPage\";\r\n\r\n\r\nconst useFetch = (url: string) => {\r\n    const [data, setData] = useState<any | null>();\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const controller = new AbortController();\r\n        const signal = controller.signal;\r\n\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            setError(null);\r\n\r\n            try {\r\n                const response = await fetch(url, {signal});\r\n                if (!response.ok) {\r\n                    throw new Error(`Error: ${response.statusText}`);\r\n                }\r\n                const jsonData = await response.json();\r\n                setData(jsonData);\r\n            } catch (error) {\r\n                setError((error as Error).message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n\r\n        return () => {\r\n            controller.abort();\r\n        }\r\n    }, [url])\r\n\r\n\r\n    return { data, loading, error }\r\n}\r\n\r\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAK3C,MAAMC,QAAQ,GAAIC,GAAW,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAa,CAAC;EAC9C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACZ,MAAMU,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAGF,UAAU,CAACE,MAAM;IAEhC,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BN,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACb,GAAG,EAAE;UAACU;QAAM,CAAC,CAAC;QAC3C,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,UAAUH,QAAQ,CAACI,UAAU,EAAE,CAAC;QACpD;QACA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACtCf,OAAO,CAACc,QAAQ,CAAC;MACrB,CAAC,CAAC,OAAOX,KAAK,EAAE;QACZC,QAAQ,CAAED,KAAK,CAAWa,OAAO,CAAC;MACtC,CAAC,SAAS;QACNd,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDM,SAAS,CAAC,CAAC;IAEX,OAAO,MAAM;MACTH,UAAU,CAACY,KAAK,CAAC,CAAC;IACtB,CAAC;EACL,CAAC,EAAE,CAACpB,GAAG,CAAC,CAAC;EAGT,OAAO;IAAEE,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACnC,CAAC;AAAAL,EAAA,CApCKF,QAAQ;AAsCd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}