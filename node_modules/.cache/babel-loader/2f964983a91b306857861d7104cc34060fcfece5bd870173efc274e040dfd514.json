{"ast":null,"code":"const useLocalStorage = key => {\n  try {\n    const getData = localStorage.getItem(key);\n    const prevData = getData ? JSON.parse(getData) : []; // Fallback to an empty array if no data\n    return {\n      prevData\n    };\n  } catch (err) {\n    console.error(err.message);\n  }\n};\nexport default useLocalStorage;","map":{"version":3,"names":["useLocalStorage","key","getData","localStorage","getItem","prevData","JSON","parse","err","console","error","message"],"sources":["C:/Users/binbin/Documents/GitHub/Recipe-Finder-App/recipe-finder/src/hooks/useLocalStorage.tsx"],"sourcesContent":["\r\nconst useLocalStorage = (key: string) => {\r\n    try {\r\n        const getData = localStorage.getItem(key);\r\n        const prevData = getData ? JSON.parse(getData) : []; // Fallback to an empty array if no data\r\n        return {prevData};\r\n    } catch (err) {\r\n        console.error((err as Error).message);\r\n    }\r\n}\r\n \r\nexport default useLocalStorage;"],"mappings":"AACA,MAAMA,eAAe,GAAIC,GAAW,IAAK;EACrC,IAAI;IACA,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAACH,GAAG,CAAC;IACzC,MAAMI,QAAQ,GAAGH,OAAO,GAAGI,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;IACrD,OAAO;MAACG;IAAQ,CAAC;EACrB,CAAC,CAAC,OAAOG,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAAEF,GAAG,CAAWG,OAAO,CAAC;EACzC;AACJ,CAAC;AAED,eAAeX,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}