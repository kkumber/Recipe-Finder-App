{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const data = await response.json();\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n_s(useFetch, \"Fc++DvcSUDM3/vBA98cprlVWLM0=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","statusText","json","message"],"sources":["C:/Users/binbin/Documents/GitHub/Recipe-Finder-App/recipe-finder/src/hooks/useFetch.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\n\r\ntype FetchState = {\r\n    data: any | null;\r\n    loading: boolean;\r\n    error: string | null;\r\n}\r\n\r\nconst useFetch = (url: string): FetchState => {\r\n    const [data, setData] = useState<any | null>();\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            setError(null);\r\n\r\n            try {\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(`Error: ${response.statusText}`);\r\n                }\r\n                const data = await response.json();\r\n\r\n\r\n            } catch (error) {\r\n                setError((error as Error).message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, [url])\r\n\r\n    return { data, loading, error }\r\n}\r\n\r\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAQ3C,MAAMC,QAAQ,GAAIC,GAAW,IAAiB;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAa,CAAC;EAC9C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BH,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;QACjC,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,UAAUH,QAAQ,CAACI,UAAU,EAAE,CAAC;QACpD;QACA,MAAMX,IAAI,GAAG,MAAMO,QAAQ,CAACK,IAAI,CAAC,CAAC;MAGtC,CAAC,CAAC,OAAOR,KAAK,EAAE;QACZC,QAAQ,CAAED,KAAK,CAAWS,OAAO,CAAC;MACtC,CAAC,SAAS;QACNV,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACnC,CAAC;AAAAL,EAAA,CA7BKF,QAAQ;AA+Bd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}