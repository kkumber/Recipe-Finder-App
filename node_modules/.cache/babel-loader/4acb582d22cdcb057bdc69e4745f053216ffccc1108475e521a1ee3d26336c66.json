{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\binbin\\\\Documents\\\\GitHub\\\\Recipe-Finder-App\\\\recipe-finder\\\\src\\\\pages\\\\Meal.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meal = () => {\n  _s();\n  const APIKEY = 'ae98638f897c4eb79d6f212f141affb8';\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const foodId = queryParams.get('id');\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`https://api.spoonacular.com/recipes/${foodId}/information?apiKey=${APIKEY}&includeNutrition=false`);\n  const [mealRecipe, setMealRecipe] = useState();\n  //  const { title, servings, readyInMinutes, instructions, image, dishTypes, id, extendedIngredients }: MealData = data;\n  const {\n    ...allElements\n  } = data;\n  useEffect(() => {\n    if (data) {\n      setMealRecipe(data);\n      console.log(data);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"foodRecipeContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mealInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoContainer\",\n        children: dishTypes.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoContainer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Meal, \"ikZXVRfI+JoEQIEYemVc/iETdL8=\", false, function () {\n  return [useLocation, useFetch];\n});\n_c = Meal;\nexport default Meal;\nvar _c;\n$RefreshReg$(_c, \"Meal\");","map":{"version":3,"names":["useEffect","useState","useFetch","useLocation","jsxDEV","_jsxDEV","Meal","_s","APIKEY","location","queryParams","URLSearchParams","search","foodId","get","data","loading","error","mealRecipe","setMealRecipe","allElements","console","log","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","dishTypes","map","type","_c","$RefreshReg$"],"sources":["C:/Users/binbin/Documents/GitHub/Recipe-Finder-App/recipe-finder/src/pages/Meal.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Console } from \"console\";\r\n\r\n\r\ninterface Ingredients {\r\n    id: number;\r\n    image: string;\r\n    original: string;\r\n}\r\n\r\ninterface MealData {\r\n    title: string;\r\n    servings: number;\r\n    readyInMinutes: number;\r\n    instructions: string;\r\n    image: string;\r\n    dishTypes: [];\r\n    id: number;\r\n    extendedIngredients: Ingredients[]\r\n}\r\n\r\n\r\n\r\nconst Meal = () => {\r\n    const APIKEY = 'ae98638f897c4eb79d6f212f141affb8';\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const foodId = queryParams.get('id');\r\n    const {data, loading, error} = useFetch(`https://api.spoonacular.com/recipes/${foodId}/information?apiKey=${APIKEY}&includeNutrition=false`);\r\n    const [mealRecipe, setMealRecipe] = useState();\r\n  //  const { title, servings, readyInMinutes, instructions, image, dishTypes, id, extendedIngredients }: MealData = data;\r\n    const { ...allElements }: MealData = data;\r\n\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n        setMealRecipe(data);\r\n        console.log(data);\r\n        }\r\n    }, [data])\r\n\r\n\r\n    return ( \r\n        <div className=\"foodRecipeContainer\">\r\n\r\n                <div className=\"titleContainer\">\r\n                    <span className=\"title\">{ title }</span>\r\n                </div>\r\n                <div className=\"mealInfoContainer\">\r\n                    <div className=\"infoContainer\">\r\n                        {dishTypes.map(type => \r\n                            <span className=\"info\">{ type }</span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"infoContainer\">\r\n                        <span className=\"info\"></span>\r\n                    </div>\r\n                    <div className=\"infoContainer\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Meal;\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAuB/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,MAAM,GAAG,kCAAkC;EACjD,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,MAAM,GAAGH,WAAW,CAACI,GAAG,CAAC,IAAI,CAAC;EACpC,MAAM;IAACC,IAAI;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGf,QAAQ,CAAC,uCAAuCW,MAAM,uBAAuBL,MAAM,yBAAyB,CAAC;EAC5I,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EAChD;EACE,MAAM;IAAE,GAAGmB;EAAsB,CAAC,GAAGL,IAAI;EAGzCf,SAAS,CAAC,MAAM;IACZ,IAAIe,IAAI,EAAE;MACVI,aAAa,CAACJ,IAAI,CAAC;MACnBM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IACjB;EACJ,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAGV,oBACIV,OAAA;IAAKkB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAE5BnB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BnB,OAAA;QAAMkB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAGC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACNxB,OAAA;MAAKkB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9BnB,OAAA;QAAKkB,SAAS,EAAC,eAAe;QAAAC,QAAA,EACzBM,SAAS,CAACC,GAAG,CAACC,IAAI,iBACf3B,OAAA;UAAMkB,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAGQ;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACNxB,OAAA;QAAKkB,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC1BnB,OAAA;UAAMkB,SAAS,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACNxB,OAAA;QAAKkB,SAAS,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAAAtB,EAAA,CAzCKD,IAAI;EAAA,QAEWH,WAAW,EAGGD,QAAQ;AAAA;AAAA+B,EAAA,GALrC3B,IAAI;AA2CV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}